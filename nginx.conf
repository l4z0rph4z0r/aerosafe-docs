# AeroSafe Documentation Site - Nginx Configuration
# Optimized for Docusaurus static site serving

server {
    listen 80;
    listen [::]:80;
    server_name docs.aerosafe.it staging-docs.aerosafe.it localhost;
    
    # Document root
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' *.vercel-analytics.com *.algolia.net *.algolianet.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https:; font-src 'self' data:; connect-src 'self' *.algolia.net *.algolianet.com; frame-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self';" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;
    
    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/javascript application/json image/svg+xml application/xml+rss text/javascript;
    
    # Cache control for static assets
    location ~* \.(css|js|ico|png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        
        # Handle CORS for fonts and assets
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
        
        # Serve file if exists, otherwise 404
        try_files $uri =404;
    }
    
    # Cache control for HTML files
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        
        try_files $uri $uri/ =404;
    }
    
    # Special handling for sitemap and robots
    location = /sitemap.xml {
        expires 1d;
        add_header Cache-Control "public";
        add_header Content-Type "application/xml";
        try_files $uri =404;
    }
    
    location = /robots.txt {
        expires 1d;
        add_header Cache-Control "public";
        add_header Content-Type "text/plain";
        try_files $uri =404;
    }
    
    # Handle trailing slashes for Docusaurus routing
    location ~ ^([^.]*[^/])$ {
        return 301 $1/;
    }
    
    # Main location block for Docusaurus SPA routing
    location / {
        try_files $uri $uri/ $uri.html /index.html;
        
        # Cache control for main pages
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        
        # Security headers for main content
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    }
    
    # Handle API routes (if implemented in future)
    location ^~ /api/ {
        # Add CORS headers for API
        add_header Access-Control-Allow-Origin "https://docs.aerosafe.it" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
        add_header Access-Control-Allow-Credentials true always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://docs.aerosafe.it" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
        
        # Proxy to API backend (configure as needed)
        # proxy_pass http://api_backend;
        return 404;
    }
    
    # Health check endpoint
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Status endpoint for monitoring
    location = /status {
        access_log off;
        return 200 "OK";
        add_header Content-Type text/plain;
    }
    
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common exploit attempts
    location ~* (eval\(|javascript:|vbscript:|onload=|onerror=) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Logging configuration
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;
    
    # Client configuration
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Timeouts
    send_timeout 60s;
    keepalive_timeout 65s;
    
    # Rate limiting (if ngx_http_limit_req_module is available)
    # limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    # limit_req_zone $binary_remote_addr zone=search:10m rate=5r/s;
    
    # location /api/ {
    #     limit_req zone=api burst=20 nodelay;
    # }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
    }
    
    location = /50x.html {
        internal;
    }
}