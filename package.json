{
  "name": "aerosafe-docs",
  "version": "0.0.0",
  "private": true,
  "scripts": {
    "docusaurus": "docusaurus",
    "start": "docusaurus start",
    "build": "docusaurus build",
    "swizzle": "docusaurus swizzle",
    "deploy": "docusaurus deploy",
    "clear": "docusaurus clear",
    "serve": "docusaurus serve",
    "write-translations": "docusaurus write-translations",
    "write-heading-ids": "docusaurus write-heading-ids",
    "typecheck": "tsc",
    "build:prod": "NODE_ENV=production npm run build",
    "build:staging": "NODE_ENV=production DOCUSAURUS_URL=https://staging-docs.aerosafe.it npm run build",
    "build:dev": "NODE_ENV=development npm run build",
    "preview": "npm run build && npm run serve",
    "preview:prod": "npm run build:prod && npm run serve",
    "preview:staging": "npm run build:staging && npm run serve",
    "docker:build": "docker build -t aerosafe-docs:latest .",
    "docker:build:prod": "docker build -t aerosafe-docs:prod --build-arg NODE_ENV=production --build-arg DOCUSAURUS_URL=https://docs.aerosafe.it .",
    "docker:build:staging": "docker build -t aerosafe-docs:staging --build-arg NODE_ENV=production --build-arg DOCUSAURUS_URL=https://staging-docs.aerosafe.it .",
    "docker:build:dev": "docker build -f Dockerfile.dev -t aerosafe-docs:dev .",
    "docker:run": "docker run -p 8080:80 aerosafe-docs:latest",
    "docker:run:prod": "docker run -p 8080:80 aerosafe-docs:prod",
    "docker:run:staging": "docker run -p 8081:80 aerosafe-docs:staging",
    "docker:run:dev": "docker run -p 3000:3000 -v $(pwd):/app aerosafe-docs:dev",
    "compose:up": "docker-compose --profile production up -d",
    "compose:up:staging": "docker-compose --profile staging up -d",
    "compose:up:dev": "docker-compose --profile development up -d",
    "compose:up:all": "docker-compose --profile production --profile staging up -d",
    "compose:down": "docker-compose down",
    "compose:down:volumes": "docker-compose down -v",
    "compose:logs": "docker-compose logs -f",
    "compose:logs:prod": "docker-compose logs -f aerosafe-docs-prod",
    "compose:logs:staging": "docker-compose logs -f aerosafe-docs-staging",
    "vercel:deploy": "vercel --prod",
    "vercel:deploy:staging": "vercel",
    "vercel:pull": "vercel env pull .env.local",
    "lint": "npm run typecheck",
    "lint:fix": "npm run typecheck",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,md,mdx}\"",
    "format:check": "prettier --check \"**/*.{js,jsx,ts,tsx,md,mdx}\"",
    "test": "echo \"No tests specified\" && exit 0",
    "test:build": "npm run build",
    "test:serve": "npm run serve &",
    "test:e2e": "echo \"E2E tests not implemented yet\"",
    "analyze": "npm run build && npx @next/bundle-analyzer",
    "server": "node server.js",
    "dev": "concurrently \"npm run start\" \"npm run server\"",
    "analyze:server": "ANALYZE=true npm run build",
    "backup": "tar -czf backup-$(date +%Y%m%d-%H%M%S).tar.gz --exclude=node_modules --exclude=build --exclude=.docusaurus .",
    "restore": "echo \"Restore from backup: tar -xzf backup-YYYYMMDD-HHMMSS.tar.gz\"",
    "health:check": "curl -f http://localhost:8080/health || exit 1",
    "health:docker": "docker exec aerosafe-docs-production curl -f http://localhost/health || exit 1",
    "clean": "npm run clear && rm -rf node_modules package-lock.json",
    "clean:docker": "docker system prune -f && docker volume prune -f",
    "clean:all": "npm run clean && npm run clean:docker",
    "setup": "npm install && npm run build",
    "setup:docker": "npm run docker:build && npm run docker:run",
    "setup:compose": "npm run compose:up",
    "update:deps": "npm update",
    "update:deps:major": "npx npm-check-updates -u && npm install",
    "audit:security": "npm audit --audit-level moderate",
    "audit:fix": "npm audit fix",
    "security:validate": "bash scripts/validate-security.sh",
    "deploy:production": "bash scripts/deploy-production.sh",
    "deploy:production:force": "bash scripts/deploy-production.sh --force",
    "deploy:rollback": "bash scripts/deploy-production.sh --rollback",
    "production:build": "docker build -f Dockerfile.production -t aerosafe-docs:production .",
    "production:up": "docker-compose -f docker-compose.production.yml up -d",
    "production:down": "docker-compose -f docker-compose.production.yml down",
    "production:logs": "docker-compose -f docker-compose.production.yml logs -f",
    "production:health": "curl -f https://docs.aerosafe.it/health || curl -f http://localhost:8080/health"
  },
  "dependencies": {
    "@docusaurus/core": "3.8.1",
    "@docusaurus/plugin-google-gtag": "^3.8.1",
    "@docusaurus/plugin-sitemap": "^3.8.1",
    "@docusaurus/preset-classic": "3.8.1",
    "@docusaurus/theme-search-algolia": "^3.8.1",
    "@easyops-cn/docusaurus-search-local": "^0.44.5",
    "@mdx-js/react": "^3.0.0",
    "@monaco-editor/react": "^4.7.0",
    "@supabase/supabase-js": "^2.57.4",
    "@types/js-cookie": "^3.0.6",
    "bcryptjs": "^3.0.2",
    "buffer": "^6.0.3",
    "clsx": "^2.0.0",
    "concurrently": "^9.2.1",
    "cors": "^2.8.5",
    "crypto-browserify": "^3.12.1",
    "dotenv": "^17.2.2",
    "express": "^5.1.0",
    "express-rate-limit": "^8.1.0",
    "gray-matter": "^4.0.3",
    "helmet": "^8.1.0",
    "js-cookie": "^3.0.5",
    "jsonwebtoken": "^9.0.2",
    "monaco-editor": "^0.52.2",
    "path-browserify": "^1.0.1",
    "playwright": "^1.55.0",
    "prism-react-renderer": "^2.3.0",
    "process": "^0.11.10",
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "react-markdown": "^10.1.0",
    "remark-gfm": "^4.0.1",
    "stream-browserify": "^3.0.0",
    "util": "^0.12.5"
  },
  "devDependencies": {
    "@docusaurus/module-type-aliases": "3.8.1",
    "@docusaurus/tsconfig": "3.8.1",
    "@docusaurus/types": "3.8.1",
    "typescript": "~5.6.2"
  },
  "browserslist": {
    "production": [
      ">0.5%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 3 chrome version",
      "last 3 firefox version",
      "last 5 safari version"
    ]
  },
  "engines": {
    "node": ">=18.0"
  }
}
