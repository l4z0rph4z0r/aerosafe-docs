# Production Nginx Configuration for AeroSafe Documentation
# Security-hardened configuration with performance optimizations

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=assets:10m rate=50r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

# Cache zones
proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static_cache:10m max_size=1g 
                 inactive=60m use_temp_path=off;

server {
    listen 80;
    server_name docs.aerosafe.it;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), accelerometer=(), gyroscope=(), magnetometer=(), payment=()" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Resource-Policy "same-origin" always;
    
    # Content Security Policy (strict)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' *.vercel-analytics.com *.algolia.net *.google-analytics.com *.googletagmanager.com https://www.gstatic.com; style-src 'self' 'unsafe-inline' fonts.googleapis.com; img-src 'self' data: blob: https: *.google-analytics.com *.googletagmanager.com; font-src 'self' data: fonts.gstatic.com; connect-src 'self' *.algolia.net *.algolianet.com *.google-analytics.com *.analytics.google.com *.googletagmanager.com; frame-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self'; upgrade-insecure-requests;" always;
    
    # HSTS (strict)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Remove server signature for security
    server_tokens off;
    more_clear_headers Server;
    
    # Rate limiting
    limit_req zone=general burst=20 nodelay;
    limit_conn conn_limit_per_ip 10;
    
    # Root directory
    root /usr/share/nginx/html;
    index index.html;
    
    # Security: Prevent access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Security: Block access to sensitive files
    location ~* \.(env|log|ini|conf|sql|bak|old|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Security.txt for vulnerability disclosure
    location /.well-known/security.txt {
        add_header Content-Type text/plain;
        expires 7d;
        add_header Cache-Control "public, immutable";
    }
    
    # Robots.txt
    location /robots.txt {
        add_header Content-Type text/plain;
        expires 7d;
        add_header Cache-Control "public, immutable";
    }
    
    # Static assets with long-term caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot|otf)$ {
        limit_req zone=assets burst=100 nodelay;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Enable gzip for static assets
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types
            application/javascript
            application/json
            application/ld+json
            application/manifest+json
            application/rss+xml
            application/xml
            image/svg+xml
            text/css
            text/javascript
            text/plain
            text/xml;
    }
    
    # HTML files with shorter caching
    location ~* \.html$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header Vary "Accept-Encoding";
        
        # Enable gzip for HTML
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
    }
    
    # API endpoints (if any)
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        # Proxy to API service if needed
    }
    
    # Main application
    location / {
        try_files $uri $uri/ @fallback;
        
        # Enable gzip
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types
            text/html
            text/css
            text/javascript
            text/plain
            text/xml
            application/javascript
            application/json
            application/xml
            application/rss+xml;
    }
    
    # Fallback for client-side routing
    location @fallback {
        try_files $uri $uri/ /index.html;
    }
    
    # Security: Block common attack vectors
    location ~* (wp-admin|wp-login|phpMyAdmin|phpmyadmin|xmlrpc|wp-config) {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }
    
    # Security: Block suspicious requests
    location ~* \.(asp|aspx|jsp|cgi|sh|py|php|pl)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }
    
    # Logging
    access_log /var/log/nginx/access.log combined buffer=16k flush=5s;
    error_log /var/log/nginx/error.log warn;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # Client settings
    client_max_body_size 1M;
    client_body_timeout 10s;
    client_header_timeout 10s;
    large_client_header_buffers 4 16k;
    
    # Buffer sizes
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
}

# Redirect HTTP to HTTPS (handled by Traefik in production)
server {
    listen 8080;
    server_name _;
    return 301 https://$host$request_uri;
}